dnl
dnl $Id: configure.in 16 2008-02-05 02:18:30Z balaji $
dnl
dnl Copyright (C) 2009, Pavan Balaji (balaji@mcs.anl.gov)
dnl

AC_PREREQ(2.62)

AC_INIT([a1], [0.1])
AC_CONFIG_AUX_DIR(m4)
AC_CONFIG_MACRO_DIR(m4)
AM_INIT_AUTOMAKE([-Wall -Werror foreign 1.11])

LT_PREREQ([2.2.6])

# Bug in libtool adds -O2 and -g by default
PAC_PUSH_VAR(CFLAGS)
LT_INIT(disable-shared)
PAC_POP_VAR(CFLAGS)

AC_CONFIG_HEADER(src/include/a1conf.h)

## Some of the autoconf macros automatically edit the CFLAGS and
## friends. We save and reset them to avoid this behavior. We want to
## control what flags get set.
PAC_PUSH_ALL_FLAGS
AC_PROG_CC
PAC_POP_ALL_FLAGS

PAC_CC_FUNCTION_NAME_SYMBOL
PAC_ARG_STRICT

## Check if the necessary headers are available
AC_CHECK_HEADERS(stdio.h stdlib.h string.h unistd.h sys/types.h)

## Check what device we want to use
a1_device_dcmf=false
AC_ARG_WITH(device, [ --with-device - A1 device to use ],
		      a1_device=$withval, a1_device=pace)
for dev in `echo $a1_device | sed -e 's/:/ /g' -e 's/,/ /g'` ; do
    case "$dev" in
    	 pace)
		a1_device_dcmf=true
		;;
	 *)
		;;
    esac
done
AM_CONDITIONAL([a1_device_dcmf],[$a1_device_dcmf])

## Error checking functionality
AC_ARG_ENABLE(error-checking, [ --enable-error-checking - Enable error checking functionality ],
			      enable_error_checking=$enableval,
			      enable_error_checking=yes)
if test "$enable_error_checking" = "yes" ; then
   AC_DEFINE(ERROR_CHECKING,1,[Define if error checking is enabled])
fi

## Check if __VA_ARGS__ is defined by the compiler
AC_MSG_CHECKING([whether the compiler allows __VA_ARGS__])
rm -f conftest.c
cat > conftest.c <<EOF
#include <stdio.h>
#define my_print(...) printf(__VA_ARGS__)
int main()
{
    my_print("woohoo!");
    return 0;
}
EOF
pac_tmp_compile='$CC $CFLAGS conftest.c -o conftest'
if AC_TRY_EVAL(pac_tmp_compile) && test -s conftest ; then
   AC_DEFINE(COMPILER_ACCEPTS_VA_ARGS,1,[Define if compiler supports __VA_ARGS__])
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi
rm -f conftest*

## Strict compilation
PAC_ARG_STRICT

## Debugging support
AC_ARG_ENABLE(g, [  --enable-g              Enable Debugging],
                 [ debug=$enableval ],
                 [ debug=no ])
AC_MSG_CHECKING(debugging support)
AC_MSG_RESULT($debug)
if test "$debug" = "yes"; then
   CFLAGS="$CFLAGS -g"
   AC_DEFINE(ENABLE_DEBUG,1,[Define if debugging support is enabled])
fi

AC_SUBST(top_srcdir)

## Final output
AC_OUTPUT(Makefile)
